@model DataModels.ViewModels.ProjectEditViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="ProjectName" class="control-label"></label>
                <input asp-for="ProjectName" class="form-control" id="projectName" />
                <span asp-validation-for="ProjectName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea rows="5" asp-for="Description" class="form-control" id="description"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="selectUsers" class="control-label">Select Developers for this project:</label>
                <input type="text" class="form-control typeahead" name="selectUsers" id="selectUsers" value="" placeholder="Search developers..." autocomplete="off" />
            </div>
            <div class="form-group">
                <label asp-for="ProjectStatusId" class="control-label">Project Status:</label>
                @Html.DropDownListFor(m => m.ProjectStatusId, new SelectList(Model.ProjectStatuses, "Id", "StatusName"), null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="col-md-4 ml-4">
        <h6>
            Selected Developers:
        </h6>
        <ul id="selectedDevelopers">
            @foreach (var projUser in Model.ProjectsAndUsers)
            {
                <li class="d-flex p-2 justify-content-between align-items-center">
                    @projUser.ApplicationUser.UserName
                    <button class="btn btn-danger removeBtn" data-id="@projUser.ApplicationUser.Id" data-username="@projUser.ApplicationUser.UserName">Remove</button>
                </li>
            }
        </ul>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
        let selectedUserIds = [];

        $(document).ready(function () {
            let projectEditViewModel = @Html.Raw(Json.Serialize(Model));

            projectEditViewModel.projectsAndUsers.forEach(p => {
                selectedUserIds.push(p.applicationUser.id);
            });

            typeAheadForEditForm();

            // remove selected developer
            $("#selectedDevelopers").on("click", ".removeBtn", function () {
                let selectedUserId = event.target.getAttribute("data-id");
                let indexOfDataId = selectedUserIds.indexOf(selectedUserId);
                selectedUserIds.splice(indexOfDataId, 1);

                let removeBtn = $(event.target);
                removeBtn.parent("li").remove();
            })

            // submit form
            $("#editForm").on("submit", function () {
                event.preventDefault(); // prevent default reload on submit
                let url = "@Url.Action("Edit", "Projects")";

                submitEditForm(projectEditViewModel, url)
            });
        });
</script>
    <script src="~/js/Projects/Edit/typeAheadForEditForm.js"></script>
    <script src="~/js/Projects/Edit/submitEditForm.js"></script>
}
