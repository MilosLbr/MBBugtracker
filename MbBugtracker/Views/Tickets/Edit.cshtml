@model DataModels.ViewModels.TicketCreateEditViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>
    Ticket &nbsp; 
    <a asp-action="Details" asp-route-id="@Model.Id"><i class="fa fa-info-circle" aria-hidden="true" title="Details"></i>
        </a>
</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedOn" />
            <input type="hidden" asp-for="UpdatedOn" />
            <input type="hidden" asp-for="ApplicationUserId" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea rows="5" asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DueDate" class="control-label"></label>
                <input type="date" asp-for="DueDate" class="form-control"></input>
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectId" class="control-label"></label>
                @Html.DropDownListFor(m => m.ProjectId, new SelectList(Model.AllProjects, "Id", "ProjectName"), null, new { @class = "form-control" })
                <span asp-validation-for="ProjectId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketPriorityId" class="control-label"></label>
                @Html.DropDownListFor(m => m.TicketPriorityId, new SelectList(Model.AllTicketPriorities, "Id", "PriorityName"), null, new { @class = "form-control" })
                <span asp-validation-for="TicketPriorityId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketStatusId" class="control-label"></label>
                @Html.DropDownListFor(m => m.TicketStatusId, new SelectList(Model.AllTicketStatuses, "Id", "StatusName"), null, new { @class = "form-control" })
                <span asp-validation-for="TicketStatusId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketTypeId" class="control-label"></label>
                @Html.DropDownListFor(m => m.TicketTypeId, new SelectList(Model.AllTicketTypes, "Id", "TypeName"), null, new { @class = "form-control" })
                <span asp-validation-for="TicketTypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AssignedTo" class="control-label"></label>
                @Html.DropDownListFor(m => m.AssignedTo, new SelectList(Model.AllAppUsers, "UserName", "UserName"), null, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>


        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
