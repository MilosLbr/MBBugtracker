@using Microsoft.AspNetCore.Identity
@model IEnumerable<DataModels.ViewModels.TicketListViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <p id="userId" data-userid="@ViewBag.userId" class="d-none"></p>
    <h1>My tickets</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>    
        @*<div class="ticketListContainer">
            <table class="table table-striped ticketListTable">
                <thead class="thead-dark">
                    <tr>
                        <th style="min-width: 350px;">
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Project.ProjectName)
                        </th>
                        <th>
                            Reported By
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketPriority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketStatus)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedOn)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DueDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AssignedTo)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex justify-content-start">
                                    @if (ViewBag.userId == item.ApplicationUser.Id)
                                    {
                                        <a asp-action="Edit" title="Edit ticket" asp-route-id="@item.Id">@item.Title</a>
                                    }
                                    else
                                    {
                                        <a asp-action="Details" title="Details" asp-route-id="@item.Id">@item.Title</a>
                                    }
                                    <span>&nbsp;&nbsp;&nbsp;</span>
                                    <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle" aria-hidden="true" title="Details"></i></a>
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Project.ProjectName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ApplicationUser.UserName)
                            </td>
                            <td>
                                @item.TicketPriority.PriorityName
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketStatus.StatusName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketType.TypeName)
                            </td>
                            <td>
                                @item.CreatedOn.ToString("dd.MM.yyyy.")
                            </td>
                            <td>
                                @item.DueDate.ToString("dd.MM.yyyy.")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AssignedTo)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>*@
    <div class=" ticketListContainer">
        <table  id="ticketsTable" class="table table-striped">
            <thead class="table-dark table-bordered">
                <tr>
                    <th >Title</th>
                    <th>Project</th>
                    <th>Reported by</th>
                    <th>Priority</th>
                    <th>Status</th>
                    <th>Type</th>
                    <th>Created on</th>
                    <th>Due date</th>
                    <th>Assigned to</th>
                </tr>
            </thead>
        </table>
    </div>


@section scripts
{ 
    <script>
        $(document).ready(() => {

            let ticketTable = $("#ticketsTable").DataTable({
                ajax: {
                    "url": "/api/tickets",
                    "dataSrc": ""
                },
                columns: [
                    {
                        "data": "title",
                        "render": (data, type, ticket) => {
                            let userId = $("#userId").data("userid");
                            let detailsHref = "/Tickets/Details/" + ticket.id;
                            let infoCircle = '<a href=' + detailsHref +'><i class="fa fa-info-circle" aria-hidden="true" title="Details"></i></a>';

                            if (userId == ticket.applicationUser.id) {
                                let editHref = "/Tickets/Edit/" + ticket.id;
                                return "<a" + " href=" + editHref + ">" + ticket.title + "&nbsp;" + infoCircle + "</a>";
                            } else {
                                return "<a>" + ticket.title +"&nbsp" + infoCircle + "</a>"
                            }

                        }
                    },
                    { "data": "project.projectName" },
                    { "data": "applicationUser.userName" },
                    { "data": "ticketPriority.priorityName" },
                    { "data": "ticketStatus.statusName" },
                    { "data": "ticketType.typeName" },
                    {
                        "data": "createdOn",
                        "render": (data) => {
                            let date = new Date(data);
                            let formated = moment(date).format("DD.MM.YYYY");
                            return formated;
                        }
                    },
                    {
                        "data": "dueDate",
                        "render": (data) => {
                            let date = new Date(data);
                            let formated = moment(date).format("DD.MM.YYYY");
                            return formated;
                        }
                    },
                    { "data": "assignedTo" }
                ],
                "columnDefs": [
                    { "width": "200px", "targets": 0 }
                ]
            });
        })
    </script>
}